image: ghcr.io/cirruslabs/android-sdk:34

variables:
  ANDROID_HOME: '/opt/android-sdk'
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.caching=true'
  GRADLE_USER_HOME: '${CI_PROJECT_DIR}/.gradle'
  VERSION: "1.0.${CI_PIPELINE_IID}"

cache:
  key: '$CI_COMMIT_REF_SLUG'
  paths:
    - .gradle/wrapper
    - .gradle/caches

before_script:
  - echo "sdk.dir=$ANDROID_HOME" > local.properties
  - echo "android.useAndroidX=true" >> gradle.properties
  - echo "android.enableJetifier=true" >> gradle.properties
  - chmod +x gradlew

stages:
  - build
  - release

build:
  stage: build
  script:
    - ./gradlew clean assembleDebug
    - echo "$VERSION" > version.txt
  artifacts:
    paths:
      - app/build/outputs/apk/debug/app-debug.apk
      - version.txt
    expire_in: 1 week
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_COMMIT_TAG'

release:
  stage: release
  script:
    - VERSION=$(cat version.txt)
    - git config --global user.email "${GIT_USER_EMAIL:-ci@melt.tech}"
    - git config --global user.name "${GIT_USER_NAME:-MELâ€‘TECH CI}"
    - git remote set-url origin https://${CI_PUSH_USER}:${CI_PUSH_TOKEN}@gitlab.com/michigan-electronic-technologies/meltech-updater.git
    - |
      if git rev-parse "v$VERSION" >/dev/null 2>&1; then
        echo "Tag v$VERSION already exists, skipping tagging."
      else
        git tag -a "v$VERSION" -m "Release v$VERSION"
        git push origin "v$VERSION"
      fi
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  needs: [build]